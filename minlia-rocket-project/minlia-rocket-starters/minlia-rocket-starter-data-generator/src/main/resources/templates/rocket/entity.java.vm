package ${package.Entity};

import com.baomidou.mybatisplus.annotations.TableName;
#foreach($pkg in ${table.importPackages})
import ${pkg};
#end
import java.util.List;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.Table;
import javax.persistence.Transient;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;


/**
 * @description: $!{table.comment}
 * @copyright: ${cfg.copyright} ${cfg.year}
 * @createTime: ${cfg.createTime}
 * @author: ${author}
 * @version: ${cfg.version}
 */
#if(${table.convert})
@TableName(value="${table.name}",resultMap="BaseResultMap")
@Table(name = "${table.name}")
@Entity
#end
#if(${superEntityClass})
@TableName(value="${table.name}",resultMap="BaseResultMap")
@Table(name = "${table.name}")
@Entity
public class ${entity} extends ${superEntityClass}#if(${activeRecord})<${entity}>#end {
#elseif(${activeRecord})
public class ${entity} extends Model<${entity}> {
#else
public class ${entity} implements Serializable {
#end

    private static final long serialVersionUID = 1L;

#foreach($field in ${table.fields})
#if(${field.keyFlag})
#set($keyPropertyName=${field.propertyName})
#end
#if("$!field.comment" != "")
    /**
     * ${field.comment}
     */
#end
#if(${field.keyFlag})
#if(${field.keyIdentityFlag})
@TableId(value="${field.name}", type= IdType.AUTO)
@Id
@GeneratedValue(strategy = GenerationType.AUTO)
#elseif(${field.convert})
	@Id
	@GeneratedValue(strategy = GenerationType.AUTO)
    @TableId("${field.name}")
#end
#elseif(${field.fill})
#if(${field.convert})
    @TableField(value = "${field.name}", fill = FieldFill.${field.fill})
#else
    @TableField(fill = FieldFill.${field.fill})
#end
#elseif(${field.convert})
    @TableField("${field.name}")
#end
#if(${logicDeleteFieldName}==${field.name})
    @TableLogic
#end
    private ${field.propertyType} ${field.propertyName};
#end
#foreach($field in ${table.fields})
#if(${field.propertyType.equals("Boolean")})
#set($getprefix="is")
#else
#set($getprefix="get")
#end

	public ${field.propertyType} ${getprefix}${field.capitalName}() {
		return ${field.propertyName};
	}

#if(${entityBuilderModel})
	public ${entity} set${field.capitalName}(${field.propertyType} ${field.propertyName}) {
#else
	public void set${field.capitalName}(${field.propertyType} ${field.propertyName}) {
#end
		this.${field.propertyName} = ${field.propertyName};
#if(${entityBuilderModel})
		return this;
#end
	}
#end

#if(${entityColumnConstant})
#foreach($field in ${table.fields})
	public static final String ${field.name.toUpperCase()} = "${field.name}";

#end
#end

}
